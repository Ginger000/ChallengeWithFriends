{"version":3,"sources":["hooks/useInputState.js","Contexts/BillContext.js","BillForm.js","Contexts/PeopleContext.js","PeopleForm.js","Contexts/TipContext.js","ResultPanel.js","Buttons.js","Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["initialVal","useState","value","setValue","e","target","BillContext","createContext","BillProvider","props","useInputState","bill","handleBillChange","resetBill","Provider","children","BillForm","useContext","className","xmlns","width","height","fill","d","type","placeholder","onChange","PeopleContext","PeopleProvider","people","handlePeopleChange","resetPeople","PeopleForm","TipContext","TipProvider","buttonTip","setButtonTip","customTip","handleCusTipChange","resetCusTip","uncheckRadio","allRadios","document","querySelectorAll","radio","checked","changeButtonTip","changeCustomTip","resetTip","ResultPanel","tip","parseFloat","tipAmountPer","toFixed","totalPer","name","onClick","Buttons","map","t","idx","id","htmlFor","console","log","Calculator","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2dc8249c.chunk.js","sourcesContent":["import {useState} from 'react';\nexport default initialVal => {\n    const [value, setValue] = useState(initialVal);\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    const reset = () =>{\n        setValue(\"\")\n    };\n    return [value, handleChange, reset];\n};","import React, {createContext} from 'react';\nimport useInputState from '../hooks/useInputState';\n\nexport const BillContext = createContext();\n\nexport function BillProvider(props){\n    \n    const [bill, handleBillChange, resetBill] = useInputState(\"\");\n    return (\n        <BillContext.Provider value={{bill, handleBillChange, resetBill}}>\n            {props.children}\n        </BillContext.Provider>\n    )\n}","import React, { useContext } from 'react';\nimport \"./BillForm.css\";\nimport { BillContext } from './Contexts/BillContext';\n\nfunction BillForm(props){\n    const {bill, handleBillChange, resetBill} = useContext(BillContext);\n    return(\n        <div className=\"InputForm\">\n            <svg className=\"iconTrick\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"17\"><path fill=\"#9EBBBD\" d=\"M6.016 16.328v-1.464c1.232-.08 2.22-.444 2.964-1.092.744-.648 1.116-1.508 1.116-2.58v-.144c0-.992-.348-1.772-1.044-2.34-.696-.568-1.708-.932-3.036-1.092V4.184c.56.144 1.012.4 1.356.768.344.368.516.816.516 1.344v.288h1.824v-.432c0-.448-.088-.876-.264-1.284a3.783 3.783 0 00-.744-1.116A4.251 4.251 0 007.54 2.9a5.324 5.324 0 00-1.524-.492V.872H4.288V2.36a5.532 5.532 0 00-1.416.324c-.448.168-.84.392-1.176.672-.336.28-.604.616-.804 1.008-.2.392-.3.844-.3 1.356v.144c0 .96.316 1.708.948 2.244.632.536 1.548.884 2.748 1.044v3.912c-.704-.16-1.248-.472-1.632-.936-.384-.464-.576-1.08-.576-1.848v-.288H.256v.576c0 .464.08.924.24 1.38.16.456.404.88.732 1.272.328.392.744.728 1.248 1.008s1.108.476 1.812.588v1.512h1.728zM4.288 7.424c-.688-.128-1.164-.332-1.428-.612-.264-.28-.396-.644-.396-1.092 0-.464.176-.832.528-1.104.352-.272.784-.448 1.296-.528v3.336zm1.728 5.712V9.344c.768.128 1.328.328 1.68.6.352.272.528.688.528 1.248 0 .544-.196.984-.588 1.32-.392.336-.932.544-1.62.624z\"/></svg>\n            <input type=\"text\" placeholder=\"0\" value={bill} onChange={handleBillChange}/>\n        </div>\n    )\n}\nexport default BillForm;","import React, {createContext} from 'react';\nimport useInputState from '../hooks/useInputState';\n\nexport const PeopleContext = createContext();\n\nexport function PeopleProvider(props){\n    //WATCH OUT!\n    //destruct array here because the hook export is also an array\n    //error would happen if object is destructed\n    const [people, handlePeopleChange, resetPeople] = useInputState(\"\");\n    return (\n        <PeopleContext.Provider value={{people, handlePeopleChange, resetPeople}}>\n            {props.children}\n        </PeopleContext.Provider>\n    )\n}","import React,{useContext} from 'react';\nimport { PeopleContext } from './Contexts/PeopleContext';\n\nfunction PeopleForm(props){\n    const {people, handlePeopleChange, resetPeople} = useContext(PeopleContext);\n    return(\n        <div>\n        <svg className=\"iconTrick\" xmlns=\"http://www.w3.org/2000/svg\" width=\"300\" height=\"300\"><path fill=\"#9EBBBD\" d=\"M9.573 7.729c.406 0 .784.07 1.126.209.342.14.639.33.881.569.232.227.438.503.614.82a5.1 5.1 0 01.407.949c.097.312.178.654.242 1.016.062.359.105.699.126 1.011.02.307.031.624.031.945 0 .836-.259 1.512-.768 2.01-.504.492-1.17.742-1.98.742H2.748c-.81 0-1.477-.25-1.98-.742C.259 14.76 0 14.084 0 13.248c0-.322.01-.64.032-.945.02-.312.063-.652.126-1.01.063-.363.144-.705.242-1.017.1-.323.238-.643.407-.948.176-.318.382-.594.613-.821.243-.238.54-.43.882-.57.342-.138.72-.208 1.125-.208.16 0 .313.067.61.265.183.123.397.264.636.421.204.134.48.259.822.372.333.11.671.167 1.005.167a3.19 3.19 0 001.006-.167c.341-.113.618-.238.822-.372l.636-.42c.296-.2.45-.266.61-.266zM6.598 0C7.63 0 8.522.38 9.252 1.129s1.1 1.666 1.1 2.724c0 1.06-.37 1.976-1.1 2.725-.73.75-1.623 1.13-2.654 1.13-1.03 0-1.924-.38-2.653-1.13-.73-.749-1.1-1.666-1.1-2.725 0-1.058.37-1.975 1.1-2.724C4.675.379 5.567 0 6.598 0z\"/></svg>\n\n        <input type=\"text\" value={people} placeholder=\"0\" onChange={handlePeopleChange}/>\n        </div>\n    )\n}\nexport default PeopleForm;","import React, {createContext, useState} from 'react';\nimport useInputState from '../hooks/useInputState';\n\nexport const TipContext = createContext();\n\nexport function TipProvider(props){\n    const [buttonTip, setButtonTip] = useState(\"\");\n    const [customTip, handleCusTipChange, resetCusTip] = useInputState(\"\");\n    const changeButtonTip = e => setButtonTip(e.target.value);\n    const changeCustomTip = ()=> setButtonTip(customTip);\n    const uncheckRadio = () => {\n        const allRadios = document.querySelectorAll('.preload');\n        for(let radio of allRadios){\n            if (radio.checked === true) radio.checked=false;\n        };\n    }\n    const resetTip = ()=> {\n        setButtonTip(\"\");\n        resetCusTip();\n        uncheckRadio();\n    }\n\n    return(\n        <TipContext.Provider \n            value={{\n                buttonTip, \n                changeButtonTip, \n                changeCustomTip,\n                customTip, \n                handleCusTipChange, \n                resetCusTip,\n                resetTip,\n                uncheckRadio\n            }}\n        >\n            {props.children}\n        </TipContext.Provider>\n    )\n}","import React, {useContext} from 'react';\nimport \"./ResultPanel.css\"\nimport { BillContext } from './Contexts/BillContext';\nimport { TipContext } from \"./Contexts/TipContext\";\nimport { PeopleContext } from './Contexts/PeopleContext';\n\nfunction ResultPanel(props){\n    const {bill, resetBill} = useContext(BillContext);\n    const {buttonTip, resetTip} = useContext(TipContext);\n    const {people, resetPeople} = useContext(PeopleContext); \n    // console.log(buttonTip);\n    // console.log(customTip);\n    const tip = parseFloat(buttonTip)/100.0;\n    // console.log(tip);\n    const tipAmountPer = (bill * tip/people).toFixed(2);\n    const totalPer = ((bill* (1 + tip))/people).toFixed(2);\n    return(\n        <div className=\"ResultPanel\">\n            <div className=\"ResultPanel-item\">\n                <div className=\"ResultPanel-label\"> <span className=\"label-highlight\"> Tip Amount</span> <br /> person</div>\n                <div className=\"ResultPanel-value\">\n                    <h1 className=\"result-value\">{`$ ${tipAmountPer > 0 ? tipAmountPer : \"0.00\"}`}</h1>\n                </div>\n            </div>\n            <div className=\"ResultPanel-item\">\n                <div className=\"ResultPanel-label\"><span className=\"label-highlight\">Total</span> <br /> /person </div>\n                <div className=\"ResultPanel-value\">\n                    <h1 className=\"result-value\">{`$ ${totalPer > 0 ?  totalPer:\"0.00\"}`}</h1>\n                </div>\n            </div>\n            <button \n                name=\"resetButton\"\n                onClick={()=>{\n                    resetBill();\n                    resetPeople();\n                    resetTip(); \n                }} \n                className=\"button reset \"\n            >\n                RESET\n            </button>\n            \n            \n            \n           \n        </div>\n    )\n}\n\nexport default ResultPanel","import React, { useContext } from \"react\";\nimport \"./Buttons.css\";\nimport { TipContext } from \"./Contexts/TipContext\";\n\nexport default function Buttons() {\n    const {\n        buttonTip,\n        changeButtonTip,\n        changeCustomTip,\n        customTip,\n        handleCusTipChange,\n        uncheckRadio\n    } = useContext(TipContext);\n    const tips = [\n        { tip: \"5%\" },\n        { tip: \"10%\" },\n        { tip: \"15%\" },\n        { tip: \"25%\" },\n        { tip: \"50%\" },\n    ];\n\n    return (\n        <div className=\"ButtonPanel Buttons\">\n            {tips.map((t, idx) => (\n                <>\n                    <input\n                        className='preload'\n                        type=\"radio\"\n                        name=\"buttonGroup\"\n                        value={t.tip}\n                        key={idx}\n                        id={idx}\n                        onClick={changeButtonTip}\n                    />\n                    <label htmlFor={idx}>{t.tip}</label>\n                </>\n            ))}\n            <input\n                className=\"customInput\"\n                type=\"text\"\n                name=\"customInput\"\n                key={5}\n                id={5}\n                placeholder=\"Custom\"\n                value={customTip}\n                // here are some async problems\n                onChange={(e)=>{\n                    changeButtonTip(e);\n                    handleCusTipChange(e);\n                }}\n                onClick={()=>{\n                    changeCustomTip();\n                    uncheckRadio();\n                    console.log(\"hahahah\")\n                }}\n \n            />\n            {/* <CustomTipForm addTip={this.props.addTip}/> */}\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport BillForm from \"./BillForm\";\nimport \"./Calculator.css\";\nimport PeopleForm from \"./PeopleForm\";\nimport ResultPanel from \"./ResultPanel\";\nimport Buttons from \"./Buttons\";\n\nfunction Calculator() {\n    return (\n        <div className=\"Calculator\">\n            <div className=\"Calculator-input\">\n                <div className=\"InputComp\">\n                    <label htmlFor=\"bill\">Bill</label>\n                    <BillForm />\n                </div>\n                <div className=\"InputComp middle-button\">\n                    <label htmlFor=\"bill\">Select Tip %</label>\n                    <Buttons />\n                </div>\n                <div className=\"InputComp\">\n                    <label htmlFor=\"people\">Number of People</label>\n                    <PeopleForm/>\n                </div>\n              \n            </div>\n            <div className=\"Calculator-output\">\n                <ResultPanel />\n            </div>\n        </div>\n    );\n}\n\nexport default Calculator;\n","import \"./App.css\";\nimport Calculator from \"./Calculator\";\nimport { BillProvider } from \"./Contexts/BillContext\";\nimport { PeopleProvider } from \"./Contexts/PeopleContext\";\nimport { TipProvider } from \"./Contexts/TipContext\";\n//deployment subfolder\n// https://stackoverflow.com/questions/51918854/how-to-deploy-create-react-app-to-gh-pages-subfolder\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <h1 className=\"App-headline\">\n                SPLI <br /> TTER\n            </h1>\n            <BillProvider>\n                <TipProvider>\n                    <PeopleProvider>\n                        <Calculator />\n                    </PeopleProvider>\n                </TipProvider>\n            </BillProvider>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}