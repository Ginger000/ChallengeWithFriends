{"version":3,"sources":["hooks/useInputState.js","BillForm.js","PeopleForm.js","ResultPanel.js","CustomTipForm.js","buttonPanel.js","buttonPa.js","Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["initialVal","useState","value","setValue","e","target","BillForm","addBill","useInputState","handleChange","className","xmlns","width","height","fill","d","type","placeholder","onChange","onInput","PeopleForm","addPeople","ResultPanel","props","bill","people","tip","tipAmountPer","toFixed","totalPer","CustomTipForm","addTip","Component","ButtonPa","tips","Buttons","selectedIdx","setSelectedIdx","setTip","map","t","idx","onClick","console","log","htmlFor","Calculator","setBill","setPeople","newTip","name","id","newBill","newPeople","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VACe,WAAAA,GACX,MAA0BC,mBAASD,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KAOA,MAAO,CAACD,EANa,SAAAE,GACjBD,EAASC,EAAEC,OAAOH,QAER,WACVC,EAAS,O,eCMFG,MATf,YAA6B,IAAVC,EAAS,EAATA,QACf,EAAqCC,EAAc,IAAnD,mBAAON,EAAP,KAAcO,EAAd,KACA,OADA,KAEI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAYC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAhF,SAAqF,sBAAMC,KAAK,UAAUC,EAAE,m9BAC5G,uBAAOC,KAAK,OAAOC,YAAY,IAAIf,MAAOA,EAAOgB,SAAUT,EAAcU,QAASZ,EAAQL,S,MCIvFkB,MAVf,YAAiC,IAAZC,EAAW,EAAXA,UACjB,EAAqCb,EAAc,IAAnD,mBAAON,EAAP,KAAcO,EAAd,KACA,OADA,KAEI,gCACA,qBAAKC,UAAU,YAAYC,MAAM,6BAA6BC,MAAM,MAAMC,OAAO,MAAjF,SAAuF,sBAAMC,KAAK,UAAUC,EAAE,u3BAE9G,uBAAOb,MAAOA,EAAOe,YAAY,IAAIC,SAAUT,EAAcU,QAASE,EAAUnB,S,MCqBzEoB,MA3Bf,SAAqBC,GACjB,IAAMC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,OAAQC,EAAOH,EAAPG,IACdC,GAAgBH,EAAOE,EAAID,GAAQG,QAAQ,GAC3CC,GAAaL,GAAQ,EAAIE,GAAMD,GAAQG,QAAQ,GACrD,OACI,sBAAKlB,UAAU,cAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,oBAAf,cAAoC,sBAAMA,UAAU,kBAAhB,yBAApC,IAAyF,uBAAzF,aACA,qBAAKA,UAAU,oBAAf,SACI,oBAAIA,UAAU,eAAd,qBAAmCiB,EAAe,EAAIA,EAAe,eAG7E,sBAAKjB,UAAU,mBAAf,UACI,sBAAKA,UAAU,oBAAf,UAAmC,sBAAMA,UAAU,kBAAhB,mBAAnC,IAAkF,uBAAlF,eACA,qBAAKA,UAAU,oBAAf,SACI,oBAAIA,UAAU,eAAd,qBAAmCmB,EAAW,EAAKA,EAAS,eAGpE,wBAAQnB,UAAU,uBAAlB,uB,kCCTGoB,MARf,SAAuBP,GACnB,MAAqCf,EAAc,IAAnD,mBAAON,EAAP,KAAcO,EAAd,KACA,OADA,KAEI,qBAAKC,UAAU,YAAf,SACI,uBAAOO,YAAY,SAASf,MAAOA,EAAOgB,SAAUT,EAAcU,QAASI,EAAMQ,OAAO7B,QCJ1E8B,Y,MC2CXC,MA3Cf,YAA6B,IAATF,EAAQ,EAARA,OAENG,EAAO,CAAC,CAAER,IAAK,MAAO,CAACA,IAAI,OAAQ,CAACA,IAAI,OAAQ,CAACA,IAAI,OAAQ,CAACA,IAAI,QAClES,EAAU,WAEZ,MAAsClC,mBAAS,MAA/C,mBAAOmC,EAAP,KAAoBC,EAApB,KACA,EAAoBpC,mBAAS,GAA7B,mBAAYqC,GAAZ,WAOA,OACI,qBAAK5B,UAAU,cAAf,SACKwB,EAAKK,KAAI,SAACC,EAAGC,GAAJ,OACN,wBAEI/B,UAAS,6BAAwB0B,IAAgBK,EAAM,UAAY,IACnEC,QAAS,WACLL,EAAeI,GAEfH,EAAOE,EAAEd,KAETiB,QAAQC,IAAI,aARpB,SAWKJ,EAAEd,KAVEe,SAiBzB,OACI,gCAEI,uBAAOI,QAAQ,GAAf,0BACA,cAACV,EAAD,CAASJ,OAAQA,QCUlBe,MA3Cf,WACI,MAAwB7C,mBAAS,GAAjC,mBAAOuB,EAAP,KAAauB,EAAb,KACA,EAA4B9C,mBAAS,GAArC,mBAAOwB,EAAP,KAAeuB,EAAf,KACA,EAAsB/C,mBAAS,GAA/B,mBAAOyB,EAAP,KAAYY,EAAZ,KAQMP,EAAS,SAAAkB,GACXX,EAAOW,IAGX,OACI,sBAAKvC,UAAU,aAAf,UAEI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,YAAf,UACI,uBAAOmC,QAAQ,OAAf,kBACA,cAAC,EAAD,CAAUK,KAAK,OAAOC,GAAG,OAAO5C,QAjBhC,SAAA6C,GACZL,EAAQK,SAkBA,sBAAK1C,UAAU,YAAf,UACI,uBAAOmC,QAAQ,SAAf,8BACA,cAAC,EAAD,CAAYK,KAAK,SAASC,GAAG,SAAS9B,UAlBpC,SAAAgC,GACdL,EAAUK,SAmBF,sBAAK3C,UAAU,YAAf,UACI,cAAC,EAAD,CAAUqB,OAAQA,IAElB,uBAAOc,QAAQ,YAAf,0BACA,cAAC,EAAD,CAAeM,GAAG,YAAYpB,OAAQA,UAG9C,qBAAKrB,UAAU,oBAAf,SAEI,cAAC,EAAD,CAAcc,KAAMA,EAAMC,OAAQA,EAAQC,IAAKA,UChChD4B,MAVf,WAEE,OACE,sBAAK5C,UAAU,MAAf,UACE,qBAAIA,UAAU,eAAd,kBAAkC,uBAAlC,WACA,cAAC,EAAD,QCIS6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c484c21.chunk.js","sourcesContent":["import {useState} from 'react';\nexport default initialVal => {\n    const [value, setValue] = useState(initialVal);\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    const reset = () =>{\n        setValue(\"\")\n    };\n    return [value, handleChange, reset];\n};","import React from 'react';\nimport useInputState from './hooks/useInputState';\nimport \"./BillForm.css\";\n\nfunction BillForm({addBill}){\n    const [value, handleChange, reset] = useInputState(\"\");\n    return(\n        <div className=\"InputForm\">\n            <svg className=\"iconTrick\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"17\"><path fill=\"#9EBBBD\" d=\"M6.016 16.328v-1.464c1.232-.08 2.22-.444 2.964-1.092.744-.648 1.116-1.508 1.116-2.58v-.144c0-.992-.348-1.772-1.044-2.34-.696-.568-1.708-.932-3.036-1.092V4.184c.56.144 1.012.4 1.356.768.344.368.516.816.516 1.344v.288h1.824v-.432c0-.448-.088-.876-.264-1.284a3.783 3.783 0 00-.744-1.116A4.251 4.251 0 007.54 2.9a5.324 5.324 0 00-1.524-.492V.872H4.288V2.36a5.532 5.532 0 00-1.416.324c-.448.168-.84.392-1.176.672-.336.28-.604.616-.804 1.008-.2.392-.3.844-.3 1.356v.144c0 .96.316 1.708.948 2.244.632.536 1.548.884 2.748 1.044v3.912c-.704-.16-1.248-.472-1.632-.936-.384-.464-.576-1.08-.576-1.848v-.288H.256v.576c0 .464.08.924.24 1.38.16.456.404.88.732 1.272.328.392.744.728 1.248 1.008s1.108.476 1.812.588v1.512h1.728zM4.288 7.424c-.688-.128-1.164-.332-1.428-.612-.264-.28-.396-.644-.396-1.092 0-.464.176-.832.528-1.104.352-.272.784-.448 1.296-.528v3.336zm1.728 5.712V9.344c.768.128 1.328.328 1.68.6.352.272.528.688.528 1.248 0 .544-.196.984-.588 1.32-.392.336-.932.544-1.62.624z\"/></svg>\n            <input type=\"text\" placeholder=\"0\" value={value} onChange={handleChange} onInput={addBill(value)}/>\n        </div>\n    )\n}\nexport default BillForm;","import React from 'react';\nimport useInputState from './hooks/useInputState';\n\nfunction PeopleForm({addPeople}){\n    const [value, handleChange, reset] = useInputState(\"\");\n    return(\n        <div>\n        <svg className=\"iconTrick\" xmlns=\"http://www.w3.org/2000/svg\" width=\"300\" height=\"300\"><path fill=\"#9EBBBD\" d=\"M9.573 7.729c.406 0 .784.07 1.126.209.342.14.639.33.881.569.232.227.438.503.614.82a5.1 5.1 0 01.407.949c.097.312.178.654.242 1.016.062.359.105.699.126 1.011.02.307.031.624.031.945 0 .836-.259 1.512-.768 2.01-.504.492-1.17.742-1.98.742H2.748c-.81 0-1.477-.25-1.98-.742C.259 14.76 0 14.084 0 13.248c0-.322.01-.64.032-.945.02-.312.063-.652.126-1.01.063-.363.144-.705.242-1.017.1-.323.238-.643.407-.948.176-.318.382-.594.613-.821.243-.238.54-.43.882-.57.342-.138.72-.208 1.125-.208.16 0 .313.067.61.265.183.123.397.264.636.421.204.134.48.259.822.372.333.11.671.167 1.005.167a3.19 3.19 0 001.006-.167c.341-.113.618-.238.822-.372l.636-.42c.296-.2.45-.266.61-.266zM6.598 0C7.63 0 8.522.38 9.252 1.129s1.1 1.666 1.1 2.724c0 1.06-.37 1.976-1.1 2.725-.73.75-1.623 1.13-2.654 1.13-1.03 0-1.924-.38-2.653-1.13-.73-.749-1.1-1.666-1.1-2.725 0-1.058.37-1.975 1.1-2.724C4.675.379 5.567 0 6.598 0z\"/></svg>\n\n        <input value={value} placeholder=\"0\" onChange={handleChange} onInput={addPeople(value)}/>\n        </div>\n    )\n}\nexport default PeopleForm;","import React from 'react';\nimport \"./ResultPanel.css\"\n\nfunction ResultPanel(props){\n    const{bill, people, tip} = props;\n    const tipAmountPer = (bill * tip/people).toFixed(2);\n    const totalPer = ((bill * (1 + tip))/people).toFixed(2);\n    return(\n        <div className=\"ResultPanel\">\n            <div className=\"ResultPanel-item\">\n                <div className=\"ResultPanel-label\"> <span className=\"label-highlight\"> Tip Amount</span> <br /> person</div>\n                <div className=\"ResultPanel-value\">\n                    <h1 className=\"result-value\">{`$ ${tipAmountPer > 0 ? tipAmountPer : \"0.00\"}`}</h1>\n                </div>\n            </div>\n            <div className=\"ResultPanel-item\">\n                <div className=\"ResultPanel-label\"><span className=\"label-highlight\">Total</span> <br /> /person </div>\n                <div className=\"ResultPanel-value\">\n                    <h1 className=\"result-value\">{`$ ${totalPer > 0 ?  totalPer:\"0.00\"}`}</h1>\n                </div>\n            </div>\n            <button className=\"button toggled reset\">RESET</button>\n            \n            \n            \n           \n        </div>\n    )\n}\n\nexport default ResultPanel","import React from 'react';\nimport useInputState from './hooks/useInputState';\nimport \"./CustomTipForm.css\"\n\nfunction CustomTipForm(props){\n    const [value, handleChange, reset] = useInputState(\"\");\n    return(\n        <div className=\"customTip\">\n            <input placeholder=\"Custom\" value={value} onChange={handleChange} onInput={props.addTip(value)}/>\n        </div>\n    )\n}\nexport default CustomTipForm;","import React, {useState, Component } from 'react';\nimport CustomTipForm from './CustomTipForm';\n\n\nclass ButtonPanel extends Component{\n    \n    render(){\n        this.props.addTip(5);\n        const tips = [{ tip: \"5%\"}, {tip:\"10%\"}, {tip:\"15%\"}, {tip:\"25%\"}, {tip:\"50%\"}]\n        const Buttons = ()=> {\n            // console.log(props);\n            const [selectedIdx, setSelectedIdx] = useState(null);\n            // const [customTip, setCustomTip] = useState(0);\n            // const addTip = newTip => {\n            //     setCustomTip(newTip);\n            //     // setSelectedIdx(null);\n            // }    \n            return(\n                <div>\n                    {tips.map((t, idx)=>(\n                        <button\n                            key={idx}\n                            className={`button ${selectedIdx === idx ? \"toggled\" : \"\"}`}\n                            onClick={()=>{\n                                setSelectedIdx(idx);\n                                // this.props.addTip(t.tip);\n                                console.log(\"clicked!\")\n                            }}\n                        >\n                            {t.tip}\n                        </button>\n                    ))}\n                    {/* <CustomTipForm addTip={this.props.addTip}/> */}\n                </div>\n            )  \n        }\n        return(\n            <div>\n                {/* {Buttons} */}\n                <Buttons />\n            </div>\n        )\n    } \n}\n\nexport default ButtonPanel;\n","import React, {useState, Component } from 'react';\nimport CustomTipForm from './CustomTipForm';\nimport \"./buttonPa.css\"\n\nfunction ButtonPa ({addTip}){\n        // console.log(props);\n        const tips = [{ tip: \"5%\"}, {tip:\"10%\"}, {tip:\"15%\"}, {tip:\"25%\"}, {tip:\"50%\"}]\n        const Buttons = ()=> {\n            // console.log(props);\n            const [selectedIdx, setSelectedIdx] = useState(null);\n            const [tip, setTip]=useState(0);\n            // addTip(tip);\n            // const [customTip, setCustomTip] = useState(0);\n            // const addTip = newTip => {\n            //     setCustomTip(newTip);\n            //     // setSelectedIdx(null);\n            // }    \n            return(\n                <div className=\"ButtonPanel\">\n                    {tips.map((t, idx)=>(\n                        <button\n                            key={idx}\n                            className={`button-size button ${selectedIdx === idx ? \"toggled\" : \"\"}`}\n                            onClick={()=>{\n                                setSelectedIdx(idx);\n                                // this.props.addTip(t.tip);\n                                setTip(t.tip);\n                                // addTip(t.tip);\n                                console.log(\"clicked!\")\n                            }}\n                        >\n                            {t.tip}\n                        </button>\n                    ))}\n                    {/* <CustomTipForm addTip={this.props.addTip}/> */}\n                </div>\n            )  \n        }\n        return(\n            <div>\n                {/* {Buttons} */}\n                <label htmlFor=\"\">Select Tip %</label>\n                <Buttons addTip={addTip}/>\n            </div>\n        )\n}\n\nexport default ButtonPa;\n","import React, { useState } from 'react';\nimport BillForm from './BillForm';\nimport './Calculator.css';\nimport PeopleForm from './PeopleForm';\nimport ResultPanel from './ResultPanel';\nimport ButtonPanel from './buttonPanel';\nimport CustomTipForm from './CustomTipForm';\nimport ButtonPa from './buttonPa';\n\nfunction Calculator (){\n    const [bill, setBill] = useState(0);\n    const [people, setPeople] = useState(0);\n    const [tip, setTip] = useState(0);\n    const addBill = newBill => {\n        setBill(newBill);\n    }\n    const addPeople = newPeople => {\n        setPeople(newPeople);\n    }\n    \n    const addTip = newTip =>{\n        setTip(newTip);\n    }\n    \n    return(\n        <div className=\"Calculator\">\n            \n            <div className=\"Calculator-input\">\n                <div className=\"InputComp\">\n                    <label htmlFor=\"bill\">Bill</label>\n                    <BillForm name=\"bill\" id=\"bill\" addBill={addBill}/>\n                </div>\n                <div className=\"InputComp\">\n                    <label htmlFor=\"people\">Number of People</label>\n                    <PeopleForm name='people' id=\"people\" addPeople={addPeople} />\n                </div>\n                <div className=\"InputComp\">\n                    <ButtonPa addTip={addTip}/>\n                    {/* <ButtonPanel addTip={addTip}/> */}\n                    <label htmlFor=\"customTip\">Custom Tip %</label>\n                    <CustomTipForm id=\"customTip\" addTip={addTip}/>\n                </div>\n            </div>\n            <div className=\"Calculator-output\">\n                \n                <ResultPanel  bill={bill} people={people} tip={tip}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Calculator;","import './App.css';\nimport Calculator from './Calculator';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <h1 className=\"App-headline\">SPLI <br /> TTER</h1>\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}