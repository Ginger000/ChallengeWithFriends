[{"/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/index.js":"1","/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/reportWebVitals.js":"2","/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/App.js":"3","/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/Components/ActivityCard.js":"4","/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/Components/ProfileCard.js":"5","/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/Contexts/TimeContext.js":"6"},{"size":500,"mtime":1635026047311,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1635026047311,"results":"9","hashOfConfig":"8"},{"size":2240,"mtime":1635026047303,"results":"10","hashOfConfig":"8"},{"size":3125,"mtime":1635026047305,"results":"11","hashOfConfig":"8"},{"size":1197,"mtime":1635026047305,"results":"12","hashOfConfig":"8"},{"size":457,"mtime":1635026047306,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9e4e4o",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/index.js",[],"/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/reportWebVitals.js",[],"/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/App.js",["29"],"import ActivityCard from \"./Components/ActivityCard\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport studySvg from \"./images/icon-study.svg\";\nimport ProfileCard from \"./Components/ProfileCard\";\nimport { TimeProvider } from \"./Contexts/TimeContext\";\nfunction App() {\n    return (\n        <div className=\"App\">\n            <TimeProvider>\n                <Container>\n                    <Row>\n                        <Col className=\"centerMobile\"  lg={3} md={3} xs={12}>\n\n                            <ProfileCard />{\" \"}\n                        </Col>\n                        <Col lg={9} md={9} xs={12}>\n                            <Row>\n                                <Col className=\"centerMobile\" lg={4} md={4} xs={12}>\n                                <ActivityCard title=\"Work\"/>\n                                    \n                                </Col>\n                                <Col className=\"centerMobile\" lg={4} md={4} xs={12}>\n                                    <ActivityCard title=\"Play\"/>\n                                </Col>\n                                <Col className=\"centerMobile\" lg={4} md={4} xs={12}>\n                                    <ActivityCard title=\"Study\"/>\n                                </Col>\n                            </Row>\n                            <Row className=\"lower\">\n                                <Col className=\"centerMobile\" lg={4} md={4} xs={12}>\n                                <ActivityCard title=\"Exercise\"/>\n                                </Col>\n                                <Col className=\"centerMobile\" lg={4} md={4} xs={12}>\n                                <ActivityCard title=\"Social\"/>\n                                </Col>\n                                <Col className=\"centerMobile\" lg={4} md={4} xs={12}>\n                                <ActivityCard title=\"Self Care\"/>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            </TimeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/Components/ActivityCard.js",["30","31"],"import React, { useContext } from \"react\";\nimport \"./ActivityCard.css\";\nimport studySvg from \"../images/icon-study.svg\";\nimport playSvg from \"../images/icon-play.svg\";\nimport exerciseSvg from \"../images/icon-exercise.svg\";\nimport selfCareSvg from \"../images/icon-self-care.svg\";\nimport socialSvg from \"../images/icon-social.svg\";\nimport workSvg from \"../images/icon-work.svg\";\nimport ellisisSvg from \"../images/icon-ellipsis.svg\";\n// import svg from `./images/icon-${this.props.activity}.svg`\nimport data from \"../data/data.json\";\nimport { TimeContext } from \"../Contexts/TimeContext\";\n\nfunction ActivityCard(props) {\n    const { time } = useContext(TimeContext);\n    const { title, activity } = props;\n    const object = data.find((x) => x.title === title);\n    const timeL = time.toLowerCase();\n    let timeP;\n    if (time === \"Daily\") timeP = \"Day\";\n    if (time === \"Weekly\") timeP = \"Week\";\n    if (time === \"Monthly\") timeP = \"Month\";\n\n    let svg;\n    let color;\n\n    switch (title) {\n        case \"Exercise\":\n            svg = exerciseSvg;\n            color = \"hsl(145, 58%, 55%)\";\n            break;\n        case \"Play\":\n            svg = playSvg;\n            color = \"hsl(195, 74%, 62%)\";\n            break;\n        case \"Self Care\":\n            svg = selfCareSvg;\n            color = \"hsl(43, 84%, 65%)\";\n            break;\n        case \"Social\":\n            svg = socialSvg;\n            color = \"hsl(264, 64%, 52%)\";\n            break;\n        case \"Study\":\n            svg = studySvg;\n            color = \"hsl(348, 100%, 68%)\";\n            break;\n        case \"Work\":\n            svg = workSvg;\n            color = \"hsl(15, 100%, 70%)\";\n            break;\n    }\n    return (\n        <div\n            className=\"ActivityCard\"\n            //I try to directly link svg file by liberal template\n            //but it cannot work in jsx file. It only works directly in css file.\n            //This cannot work:style={{backgroundImage:`url('../images/icon-${this.props.activity}.svg')`}}\n            ////This also cannot work:style={{backgroundImage:`url(../images/icon-${this.props.activity}.svg)`}}\n            //Hence, I have to import workSvg from \"../images/icon-work.svg\" etc at the top\n            //and I have to write switch\n            style={{\n                backgroundImage: `url(${svg})`,\n                backgroundColor: `${color}`,\n            }}\n        >\n            <div className=\"ActivityCard-display\">\n                <div className=\"titleBar\">\n                    <span className=\"activityTitle\">{title}</span>\n                    <span>\n                        <img src={ellisisSvg} alt=\"compressed-menu-icon\" />\n                    </span>\n                </div>\n                <div className=\"times\">\n                    <div className=\"currentTime\">\n                        {object.timeframes[timeL].current}hrs\n                    </div>\n                    <div className=\"previousTime\">\n                        Last {timeP} - {object.timeframes[timeL].previous}hrs\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ActivityCard;\n","/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/Components/ProfileCard.js",["32"],"import React, {useContext} from 'react';\nimport avatarSVG from \"../images/image-jeremy.png\";\nimport \"./ProfileCard.css\"\nimport { TimeContext } from '../Contexts/TimeContext';\n\nfunction ProfileCard(){\n    const {changeTimeOption} = useContext(TimeContext);\n    const options = [\"Daily\", \"Weekly\", \"Monthly\"];\n    const buttons = options.map((o, idx) => (\n        <>\n            <input \n                type=\"radio\" \n                name=\"buttons\"\n                value={o}\n                key={idx}\n                id={idx}\n                onClick={changeTimeOption}\n            />\n            <label htmlFor={idx}>{o}</label>\n        </>\n    ))\n    return(\n        <div className=\"ProfileCard\">\n            <div className=\"ProfileCard-upperCard\">\n                <img src={avatarSVG} alt=\"Jeremy's-profile-picture\" />\n                <div className=\"content\"> \n                    <span className=\"small\"> Report for </span> \n                    <br />\n                    <span className=\"large\" > Jeremy Robson</span> \n                </div>\n            </div>\n            <div className=\"Buttons\">\n                {buttons}\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileCard;","/Users/linjiang/Desktop/2021FALL/ChallengeWithFriends/1_time-tracking-dashboard/src/Contexts/TimeContext.js",[],{"ruleId":"33","severity":1,"message":"34","line":7,"column":8,"nodeType":"35","messageId":"36","endLine":7,"endColumn":16},{"ruleId":"33","severity":1,"message":"37","line":16,"column":20,"nodeType":"35","messageId":"36","endLine":16,"endColumn":28},{"ruleId":"38","severity":1,"message":"39","line":27,"column":5,"nodeType":"40","messageId":"41","endLine":52,"endColumn":6},{"ruleId":"42","severity":1,"message":"43","line":25,"column":17,"nodeType":"44","endLine":25,"endColumn":71},"no-unused-vars","'studySvg' is defined but never used.","Identifier","unusedVar","'activity' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]